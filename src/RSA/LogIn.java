/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RSA;

import Hash.SHA256;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

/**
 *
 * @author Mvami N. Jonalex
 */
public class LogIn extends javax.swing.JDialog {

    /**
     * Creates new form LogIn
     * @param parent
     * @param modal
     */
    public LogIn(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        
        DateCbx.setModel(new javax.swing.DefaultComboBoxModel(initDates("Janvier","1900")));
        YearCbx.setModel(new javax.swing.DefaultComboBoxModel(initYears()));
        MonthCbx.setModel(new javax.swing.DefaultComboBoxModel(initMonths()));
        
        PasswordPfd.setForeground(Color.gray);
        RPasswordPfd.setForeground(Color.gray);
        IdentifierTfd.setForeground(Color.gray);
        LastNameTfd.setForeground(Color.gray);
        FirstNameTfd.setForeground(Color.gray);
        eMailTfd.setForeground(Color.gray);
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        InstructionPnl = new javax.swing.JScrollPane();
        InstructionTpn = new javax.swing.JTextPane();
        FirstNameLbl = new javax.swing.JLabel();
        LastNameLbl = new javax.swing.JLabel();
        IdentifierLbl = new javax.swing.JLabel();
        PasswordLbl = new javax.swing.JLabel();
        RPasswordLbl = new javax.swing.JLabel();
        DOBLbl = new javax.swing.JLabel();
        eMailLbl = new javax.swing.JLabel();
        FirstNameTfd = new javax.swing.JTextField();
        LastNameTfd = new javax.swing.JTextField();
        IdentifierTfd = new javax.swing.JTextField();
        PasswordPfd = new javax.swing.JPasswordField();
        RPasswordPfd = new javax.swing.JPasswordField();
        DateCbx = new javax.swing.JComboBox();
        MonthCbx = new javax.swing.JComboBox();
        YearCbx = new javax.swing.JComboBox();
        eMailTfd = new javax.swing.JTextField();
        ValidateBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(400, 380));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Nouveau Compte"));

        InstructionPnl.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        InstructionTpn.setEditable(false);
        InstructionTpn.setBackground(new java.awt.Color(240, 240, 240));
        InstructionTpn.setBorder(null);
        InstructionTpn.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        InstructionTpn.setText("Configuration de votre compte :  ");
        InstructionPnl.setViewportView(InstructionTpn);

        FirstNameLbl.setText("Nom : ");

        LastNameLbl.setText("Prénom : ");

        IdentifierLbl.setText("Identifiant : ");

        PasswordLbl.setText("Mot de passe : ");

        RPasswordLbl.setText("Repéter : ");

        DOBLbl.setText("Date de Naissance : ");

        eMailLbl.setText("e-mail : ");

        FirstNameTfd.setText("Mvami");
        FirstNameTfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                FirstNameTfdMouseReleased(evt);
            }
        });

        LastNameTfd.setText("Jonathan");
        LastNameTfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                LastNameTfdMouseReleased(evt);
            }
        });

        IdentifierTfd.setText("Johnny");
        IdentifierTfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                IdentifierTfdMouseReleased(evt);
            }
        });

        PasswordPfd.setText("johnny");
        PasswordPfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                PasswordPfdMouseReleased(evt);
            }
        });

        RPasswordPfd.setText("johnny");
        RPasswordPfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                RPasswordPfdMouseReleased(evt);
            }
        });

        DateCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DateCbx.setToolTipText("");

        MonthCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        MonthCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MonthCbxActionPerformed(evt);
            }
        });

        YearCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        YearCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                YearCbxActionPerformed(evt);
            }
        });

        eMailTfd.setText("exemple@ymail.com");
        eMailTfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eMailTfdMouseReleased(evt);
            }
        });

        ValidateBtn.setText("Valider");
        ValidateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidateBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(InstructionPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(DOBLbl)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(DateCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(MonthCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(YearCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(eMailLbl)
                                .addGap(18, 18, 18)
                                .addComponent(eMailTfd))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(IdentifierLbl)
                                .addGap(18, 18, 18)
                                .addComponent(IdentifierTfd))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(PasswordLbl)
                                    .addComponent(RPasswordLbl))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RPasswordPfd, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                                    .addComponent(PasswordPfd))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(FirstNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FirstNameTfd, javax.swing.GroupLayout.DEFAULT_SIZE, 134, Short.MAX_VALUE)
                        .addGap(12, 12, 12)
                        .addComponent(LastNameLbl)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LastNameTfd, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ValidateBtn)
                .addGap(18, 18, 18)
                .addComponent(CancelBtn)
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(InstructionPnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(FirstNameTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(FirstNameLbl)
                        .addComponent(LastNameLbl)
                        .addComponent(LastNameTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IdentifierLbl)
                    .addComponent(IdentifierTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PasswordLbl)
                    .addComponent(PasswordPfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RPasswordLbl)
                    .addComponent(RPasswordPfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DOBLbl)
                    .addComponent(DateCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MonthCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(YearCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eMailLbl)
                    .addComponent(eMailTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValidateBtn)
                    .addComponent(CancelBtn))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void YearCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_YearCbxActionPerformed
        // TODO add your handling code here:
        DateCbx.setModel(new javax.swing.DefaultComboBoxModel(initDates(MonthCbx.getModel().getSelectedItem().toString(),YearCbx.getModel().getSelectedItem().toString())));
        System.out.println(MonthCbx.getModel().getSelectedItem().toString());
        System.out.println(YearCbx.getModel().getSelectedItem().toString());
    }//GEN-LAST:event_YearCbxActionPerformed

    private void ValidateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidateBtnActionPerformed
        // TODO add your handling code here:
       if(userExist(IdentifierTfd.getText())){
            Message dialog = new Message(this, true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                }
            });
            dialog.setMessage("L'identifiant est déja utilisé!");
            dialog.displayMessage();
            dialog.setVisible(true);
            IdentifierTfd.setForeground(Color.red);
            IdenEdit = false;
            
            error = true;
       } 
       
       if(!passwordMatch(PasswordPfd.getText(),RPasswordPfd.getText())){
            Message dialog = new Message(this, true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                }
            });
            dialog.setMessage("Mot de passe invalide!");
            dialog.displayMessage();
            dialog.setVisible(true);
            PasswordPfd.setForeground(Color.red);
            RPasswordPfd.setForeground(Color.red);
            PWEdit = false;
            RPWEdit = false;
            
            error = true;
       }
       
       if(FirstNameTfd.getText().equals("")||LastNameTfd.getText().equals("")||IdentifierTfd.getText().equals("")||PasswordPfd.getText().equals("")||eMailTfd.getText().equals("")){
           Message dialog = new Message(this, true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                }
            });
            dialog.setMessage("Entrez les champs!");
            dialog.displayMessage();
            dialog.setVisible(true);
            
            error = true;
       }
       
       if(!error){
           setFirstName(FirstNameTfd.getText());
           setLastName(LastNameTfd.getText());
           setIdentifier(IdentifierTfd.getText());
           setPasswordHash(new SHA256().SHA256Digest(PasswordPfd.getText()));
           setDOB(DateCbx.getModel().getSelectedItem().toString()+" "+MonthCbx.getModel().getSelectedItem().toString()+" "+YearCbx.getModel().getSelectedItem().toString());
           setEMail(eMailTfd.getText());
           setUserId(userCounter);
           readUserInfo("Data/Users/Users.txt");
           UsersInfoArray.add(0, getFirstName()+";"+getLastName()+";"+getIdentifier()+";"+getPasswordHash()+";"+getDOB()+";"+getEMail()+";"+getUserId());
           writeUserInfo("Data/Users/Users.txt");
           setDataBase(userCounter);

           
           dispose();
       }
       
       error = false;
    }//GEN-LAST:event_ValidateBtnActionPerformed

    private void MonthCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MonthCbxActionPerformed
        // TODO add your handling code here:
        DateCbx.setModel(new javax.swing.DefaultComboBoxModel(initDates(MonthCbx.getModel().getSelectedItem().toString(),YearCbx.getModel().getSelectedItem().toString())));
        System.out.println(MonthCbx.getModel().getSelectedItem());
        System.out.println(YearCbx.getModel().getSelectedItem());
    }//GEN-LAST:event_MonthCbxActionPerformed

    private void FirstNameTfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FirstNameTfdMouseReleased
        // TODO add your handling code here:
        if(!FNEdit){
            FirstNameTfd.setForeground(Color.black);
            FirstNameTfd.setText("");
            FNEdit = true;
        }
    }//GEN-LAST:event_FirstNameTfdMouseReleased

    private void LastNameTfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_LastNameTfdMouseReleased
        // TODO add your handling code here:
        if(!LNEdit){
            LastNameTfd.setForeground(Color.black);
            LastNameTfd.setText("");
            LNEdit = true;
        }
    }//GEN-LAST:event_LastNameTfdMouseReleased

    private void IdentifierTfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IdentifierTfdMouseReleased
        // TODO add your handling code here:
        if(!IdenEdit){
            IdentifierTfd.setForeground(Color.black);
            IdentifierTfd.setText("");
            IdenEdit = true;
        }
    }//GEN-LAST:event_IdentifierTfdMouseReleased

    private void PasswordPfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PasswordPfdMouseReleased
        // TODO add your handling code here:
        if(!PWEdit){
            PasswordPfd.setForeground(Color.black);
            PasswordPfd.setText("");
            PWEdit = true;
        }
    }//GEN-LAST:event_PasswordPfdMouseReleased

    private void RPasswordPfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RPasswordPfdMouseReleased
        // TODO add your handling code here:
        if(!RPWEdit){
            RPasswordPfd.setForeground(Color.black);
            RPasswordPfd.setText("");
            RPWEdit = true;
        }
    }//GEN-LAST:event_RPasswordPfdMouseReleased

    private void eMailTfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eMailTfdMouseReleased
        // TODO add your handling code here:
        if(!EMEdit){
            eMailTfd.setForeground(Color.black);
            eMailTfd.setText("");
            EMEdit = true;
        }
    }//GEN-LAST:event_eMailTfdMouseReleased

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(LogIn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                LogIn dialog = new LogIn(new javax.swing.JDialog(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }
    
    //<editor-fold defaultstate="collapsed" desc="properties">
    private String firstName;
    private String lastName;
    private String identifier;
    private String passwordHash;
    private String DOB;
    private String eMail;
    private int userId;
    
    private ArrayList <String> UsersInfoArray;
    
    private boolean FNEdit = false;
    private boolean LNEdit = false;
    private boolean IdenEdit = false;
    private boolean PWEdit = false;
    private boolean RPWEdit = false;
    private boolean EMEdit = false;
    
    private boolean error = false;
    
    private int userCounter = 0;
//</editor-fold>
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JLabel DOBLbl;
    private javax.swing.JComboBox DateCbx;
    private javax.swing.JLabel FirstNameLbl;
    private javax.swing.JTextField FirstNameTfd;
    private javax.swing.JLabel IdentifierLbl;
    private javax.swing.JTextField IdentifierTfd;
    private javax.swing.JScrollPane InstructionPnl;
    private javax.swing.JTextPane InstructionTpn;
    private javax.swing.JLabel LastNameLbl;
    private javax.swing.JTextField LastNameTfd;
    private javax.swing.JComboBox MonthCbx;
    private javax.swing.JLabel PasswordLbl;
    private javax.swing.JPasswordField PasswordPfd;
    private javax.swing.JLabel RPasswordLbl;
    private javax.swing.JPasswordField RPasswordPfd;
    private javax.swing.JButton ValidateBtn;
    private javax.swing.JComboBox YearCbx;
    private javax.swing.JLabel eMailLbl;
    private javax.swing.JTextField eMailTfd;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    //<editor-fold defaultstate="collapsed" desc="set methods">
    private void setFirstName(String tmp){
        firstName = tmp;
    }
    
    private void setLastName(String tmp){
        lastName = tmp;
    }
    
    private void setIdentifier(String tmp){
        identifier = tmp;
    }
    
    private void setPasswordHash(String tmp){
        passwordHash = tmp;
    }
    
    private void setDOB(String tmp){
        DOB = tmp;
    }
    
    private void setEMail(String tmp){
        eMail = tmp;
    }
    
    private void setUserId(int tmp){
        userId = tmp;
    }
//</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="get methods">
    private String getFirstName(){
        return firstName;
    }
    
    private String getLastName(){
        return lastName;
    }
    
    private String getIdentifier(){
        return identifier;
    }
    
    private String getPasswordHash(){
        return passwordHash;
    }
    
    private String getDOB(){
        return DOB;
    }
    
    private String getEMail(){
        return eMail;
    }
    
    private int getUserId(){
        return userId;
    }
//</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="initComboBox methods">
    private String[] initDates(String month, String year) {
        String[] dates = new String[1];
        
        if("Janvier".equals(month) || "Mars".equals(month) || "Mai".equals(month) || "Juillet".equals(month) || "Août".equals(month) || "Octobre".equals(month) || "Décembre".equals(month)){
            dates = new String[31];
            for(int i=0; i<31; i++){
                dates[i] = Integer.toString(i+1);
            }
            return dates;
        }
        
        if("Avril".equals(month) || "Juin".equals(month) || "Septembre".equals(month) || "Novembre".equals(month)){
            dates = new String[30];
            for(int i=0; i<30; i++){
                dates[i] = Integer.toString(i+1);
            }
            return dates;
        }
        
        if("Février".equals(month)){
            if(Integer.parseInt(year)%4 == 0){
                dates = new String[29];
                for(int i=0; i<29; i++){
                    dates[i] = Integer.toString(i+1);
                }
                return dates;
            }
            else{
                dates = new String[28];
                for(int i=0; i<28; i++){
                    dates[i] = Integer.toString(i+1);
                }
                return dates;
            }
        }
        return dates;
    }
    
    private String[] initMonths() {
        String[] months = {"Janvier", "Février", "Mars", "Avril", "Mai", "Juin", "Juillet", "Août", "Octobre", "Septembre", "Novembre", "Décembre",};
        
        return months;
    }
    
    private String[] initYears() {
        String[] years = new String[150];
        
        for(int i=0; i<years.length; i++){
            years[i] = Integer.toString(1900+i);
        }
        return years;
    }
//</editor-fold>
    
    //<editor-fold defaultstate="collapsed" desc="methods">
    private void writeUserInfo(String url) {
        Fichier file = new Fichier();
        // Open in write mode
        file.openInWrite(url);
        // Go through the array
        for (String elt : UsersInfoArray) {
            // Ecrire l'élément (contact) courant
            file.write(elt);
        }
        // Fermer le fichier
        file.closeFile();
    }
    
    private void readUserInfo(String url) {
        UsersInfoArray = new ArrayList();
        Fichier file = new Fichier();
        // Open file in read mode
        file.openInRead(url);
        String readLine;
        // do ...
        do {
            // read line
            readLine = file.read();
            if (readLine != null){
                //Add read line to array list
                UsersInfoArray.add(readLine);
            }
            // ... while the read line is not null.
        } while (readLine != null);
        file.closeFile();
    }
    
    
    private boolean userExist(String iden){
        
        userCounter = 0;
        readUserInfo("Data/Users/Users.txt");
        for(String elt: UsersInfoArray){
            if(iden.equals((new Fichier().extractData(elt, ";"))[2])){
                return true;
            }
            userCounter++;
        }
        return false;
    }
    
    private boolean passwordMatch(String pw, String rpw){
        return rpw.equals(pw);
    }
    
    private String passwordHash(String pw){
        return new SHA256().SHA256Digest(PasswordPfd.getText());
    }
    
    private void setDataBase(int userId) {
        //<editor-fold defaultstate="collapsed" desc="paths">
        String[] path = {"Data/Users/User_id"+userId+"/Keys/Keys.txt",
            "Data/Users/User_id"+userId+"/Plain_text/Ciph_text.txt",
            "Data/Users/User_id"+userId+"/Plain_text/Deciph_text.txt",
            "Data/Users/User_id"+userId+"/Plain_text/Hash_text.txt",
            "Data/Users/User_id"+userId+"/Plain_text/Sign_text.txt",
            "Data/Users/User_id"+userId+"/Plain_text/Authent.txt",
            "Data/Users/User_id"+userId+"/Result/Ciphered.txt",
            "Data/Users/User_id"+userId+"/Result/Deciphered.txt",
            "Data/Users/User_id"+userId+"/Result/HashCode.txt",
            "Data/Users/User_id"+userId+"/Result/Signature.txt",
            "Data/Users/User_id"+userId+"/Result/buffer.txt",
        };
//</editor-fold>
        try {
            //creation of user data base
            for(int i = 0; i<path.length; i++){
                File f = new File(path[i]);
                //creates the parent directory of the file
                f.getParentFile().mkdirs();
                //creates the file
                f.createNewFile();
            }
        } catch (IOException ex) {
            System.out.println(ex.toString());
        }
    }
//</editor-fold>

}
