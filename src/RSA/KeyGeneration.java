/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package RSA;

import java.math.BigInteger;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;

/**
 *
 * @author Mvami N. Jonalex
 */
public class KeyGeneration extends javax.swing.JDialog {

    /**
     * Creates new form KeyGeneration
     */
    public KeyGeneration(java.awt.Dialog parent, boolean modal) {
        super(parent, modal);
        initComponents();
        ValidateBtn.setEnabled(keyGenerated);
        DetailsBtn.setEnabled(keyGenerated);

    }
    
    private BigInteger p,q,e,d,n;
    
    public void setP(BigInteger tmp){
        p = tmp;
    }
    
    public void setQ(BigInteger tmp){
        q = tmp;
    }
    
    public void setE(BigInteger tmp){
        e = tmp;
    }
    
    public void setD(BigInteger tmp){
        d = tmp;
    }
    
    public void setN(BigInteger tmp){
        n = tmp;
    }
    
    public BigInteger getP(){
        return p;
    }
    
    public BigInteger getQ(){
        return q;
    }
    
    public BigInteger getE(){
        return e;
    }
    
    public BigInteger getD(){
        return d;
    }
    
    public BigInteger getN(){
        return n;
    }
    
    public BigInteger setN(){
        return n;
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        KeySizeTfd = new javax.swing.JTextField();
        KeyDescriptionTfd = new javax.swing.JTextField();
        KeyGenerateBtn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        PublicKeyTfd = new javax.swing.JLabel();
        PrivateKeyTfd = new javax.swing.JLabel();
        ModuloTfd = new javax.swing.JLabel();
        ValidateBtn = new javax.swing.JButton();
        CancelBtn = new javax.swing.JButton();
        DetailsBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Générer une clé"));

        jLabel1.setText("Taille de la clé :");

        jLabel2.setText("Describtion : ");

        KeySizeTfd.setForeground(new java.awt.Color(102, 102, 102));
        KeySizeTfd.setText("128");
        KeySizeTfd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                KeySizeTfdMouseReleased(evt);
            }
        });
        KeySizeTfd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeySizeTfdActionPerformed(evt);
            }
        });

        KeyDescriptionTfd.setForeground(new java.awt.Color(102, 102, 102));
        KeyDescriptionTfd.setText("SecureId");

        KeyGenerateBtn.setText("Générer");
        KeyGenerateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KeyGenerateBtnActionPerformed(evt);
            }
        });

        jTextField3.setEditable(false);
        jTextField3.setText("bits");

        jLabel3.setText("Clé publique : ");

        jLabel4.setText("Clé privée :");

        jLabel5.setText("Module :");

        PublicKeyTfd.setBackground(new java.awt.Color(250, 250, 250));
        PublicKeyTfd.setForeground(new java.awt.Color(102, 102, 102));
        PublicKeyTfd.setText("Clé publique ");
        PublicKeyTfd.setOpaque(true);
        PublicKeyTfd.setPreferredSize(new java.awt.Dimension(307, 14));

        PrivateKeyTfd.setBackground(new java.awt.Color(250, 250, 250));
        PrivateKeyTfd.setForeground(new java.awt.Color(102, 102, 102));
        PrivateKeyTfd.setText("Clé privée ");
        PrivateKeyTfd.setOpaque(true);
        PrivateKeyTfd.setPreferredSize(new java.awt.Dimension(307, 14));

        ModuloTfd.setBackground(new java.awt.Color(250, 250, 250));
        ModuloTfd.setForeground(new java.awt.Color(102, 102, 102));
        ModuloTfd.setText("Module ");
        ModuloTfd.setOpaque(true);
        ModuloTfd.setPreferredSize(new java.awt.Dimension(307, 14));

        ValidateBtn.setText("Valider");
        ValidateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ValidateBtnActionPerformed(evt);
            }
        });

        CancelBtn.setText("Cancel");
        CancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelBtnActionPerformed(evt);
            }
        });

        DetailsBtn.setText("Détails");
        DetailsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DetailsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ModuloTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PrivateKeyTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PublicKeyTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(KeySizeTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(KeyDescriptionTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(KeyGenerateBtn)))
                        .addGap(10, 10, 10)))
                .addGap(26, 26, 26))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(DetailsBtn)
                .addGap(31, 31, 31)
                .addComponent(ValidateBtn)
                .addGap(18, 18, 18)
                .addComponent(CancelBtn)
                .addGap(31, 31, 31))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(KeySizeTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(KeyDescriptionTfd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(KeyGenerateBtn))
                .addGap(45, 45, 45)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(PublicKeyTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PrivateKeyTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(ModuloTfd, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ValidateBtn)
                    .addComponent(CancelBtn)
                    .addComponent(DetailsBtn))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void KeyGenerateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeyGenerateBtnActionPerformed
        // TODO add your handling code here:
        if(exist(KeyDescriptionTfd.getText())){
            Message dialog = new Message(this, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                    }
                });
        dialog.setMessage("Identifiant déja utilissé!");
        dialog.displayMessage();
        dialog.setVisible(true);
        KeyDescriptionTfd.setText("Nouvel identifiant");
        }
        else if(Integer.parseInt(KeySizeTfd.getText())<8){
            Message dialog = new Message(this, true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        KeyDescriptionTfd.setText("Nouveau identifiant");
                    }
                });
        dialog.setMessage("Entrez une taille d'aumoins 8bits");
        dialog.displayMessage();
        dialog.setVisible(true);
        KeySizeTfd.setText("Ex: 2048");
        }
        else{
            rsaKeyGenerator(Integer.parseInt(KeySizeTfd.getText()));
            keyGenerated = true;
            PublicKeyTfd.setText("("+getE().toString()+", "+getN().toString()+")");
            PrivateKeyTfd.setText("("+getD().toString()+", "+getN().toString()+")");
            ModuloTfd.setText(getN().toString());
            newKey[0] = KeyDescriptionTfd.getText();
            newKey[1] = KeySizeTfd.getText();
            newKey[2] = getE().toString();
            newKey[3] = getD().toString();
            newKey[4] = getN().toString();
            ValidateBtn.setEnabled(keyGenerated);
            DetailsBtn.setEnabled(keyGenerated);
        }
    }//GEN-LAST:event_KeyGenerateBtnActionPerformed

    private void ValidateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ValidateBtnActionPerformed
        // TODO add your handling code here:
        String newKeyLine = newKey[0]+";"+newKey[1]+";"+newKey[2]+";"+newKey[3]+";"+newKey[4];
        readKeys();
        KeysListArray.add(0, newKeyLine);
        writeKeys();
        
        dispose();
    }//GEN-LAST:event_ValidateBtnActionPerformed

    private void CancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelBtnActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_CancelBtnActionPerformed

    private void DetailsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DetailsBtnActionPerformed
        // TODO add your handling code here:
        KeyDetails dialog = new KeyDetails(this, true);
        dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                    }
                });
        dialog.setListInfo(newKey);
        dialog.displayDetails();
        dialog.setVisible(true);
    }//GEN-LAST:event_DetailsBtnActionPerformed

    private void KeySizeTfdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KeySizeTfdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_KeySizeTfdActionPerformed

    private void KeySizeTfdMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_KeySizeTfdMouseReleased
        // TODO add your handling code here:
        KeySizeTfd.setText("");
    }//GEN-LAST:event_KeySizeTfdMouseReleased

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(KeyGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(KeyGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(KeyGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(KeyGeneration.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                KeyGeneration dialog = new KeyGeneration(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    private boolean keyGenerated = false;
    private String[] newKey = new String[5];
    private ArrayList <String> KeysListArray;
    
    private CurrentUser user = new CurrentUser();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelBtn;
    private javax.swing.JButton DetailsBtn;
    private javax.swing.JTextField KeyDescriptionTfd;
    private javax.swing.JButton KeyGenerateBtn;
    private javax.swing.JTextField KeySizeTfd;
    private javax.swing.JLabel ModuloTfd;
    private javax.swing.JLabel PrivateKeyTfd;
    private javax.swing.JLabel PublicKeyTfd;
    private javax.swing.JButton ValidateBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextField3;
    // End of variables declaration//GEN-END:variables

    private void writeKeys() {
        Fichier f = new Fichier();
      // Open in write mode
      f.openInWrite("Data/Users/User_id"+user.getUserId()+"/Keys/Keys.txt");
      // Go through the array
      for (String elt : KeysListArray) {
          // Ecrire l'élément (contact) courant
         f.write(elt);
      }
      // Fermer le fichier
      f.closeFile();
    }

    private void readKeys() {
        KeysListArray = new ArrayList();
        Fichier f = new Fichier();
        // Open file in read mode
        f.openInRead("Data/Users/User_id"+user.getUserId()+"/Keys/Keys.txt");
        String readLine;
        // do ...
        do {
            // read line
           readLine = f.read();
	   if (readLine != null){
               //Add read line to array list 
              KeysListArray.add(readLine);
            }
        // ... while the read line is not null.
        } while (readLine != null);
        f.closeFile();
    }

    private void rsaKeyGenerator(int size) {
        		
	SecureRandom rnd = new SecureRandom();
	BigInteger p,q,e,d;
	//
	do{
            p = BigInteger.probablePrime(size/2,rnd);
            q = BigInteger.probablePrime(size/2,rnd);
	}while((p.mod(q)).equals(BigInteger.ZERO));
		
	BigInteger n = p.multiply(q);
	BigInteger phi = (p.subtract(BigInteger.ONE)).multiply(q.subtract(BigInteger.ONE));
	do{
            e = getCoprime(phi);
            d = e.modInverse(phi);
	}while((e.mod(d)).equals(BigInteger.ZERO));

        setAll(p,q,e,d,n);
        
	System.out.println("p: "+p);
	System.out.println("q: "+q);
	System.out.println("modulus n: "+n);
	System.out.println("phi: "+phi);
	System.out.println("Key size: "+n.bitLength()+"bits\n");
		
	System.out.println("Public key (e,n): ("+e+","+n+")");
	System.out.println("Private key (d,n): ("+d+","+n+")");
    }
	
    public static BigInteger getCoprime(BigInteger phi) {
	SecureRandom rnd = new SecureRandom();
	int length = phi.bitLength()-1;
	BigInteger e;
	do{
            e = BigInteger.probablePrime(length,rnd);
	}while (!((phi.gcd(e)).equals(BigInteger.ONE)));
	return e;
    }

    private void setAll(BigInteger p, BigInteger q, BigInteger e, BigInteger d, BigInteger n) {
        setP(p);
        setQ(q);
        setE(e);
        setD(d);
        setN(n);

    }

    private boolean exist(String text) {
        boolean existence = false;
        String[] tmp = new String[5];
        
        readKeys();
        for (String elt : KeysListArray) {
            tmp  = new Fichier().extractData(elt, ";");
            if(tmp[0].equals(text)){
                return !existence;
            }
        }
        
        return existence;
    }
}

